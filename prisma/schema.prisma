datasource db {
    provider = "mongodb"
    url      = env("CONNECT")
}

generator client {
    provider = "prisma-client-js"
}

model Money {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId
    username String
    nickname String?
    userID   String  @unique
    serverID String
    bank     Int     @default(0)
    wallet   Int     @default(0)
}

model Member {
    id        String @id @default(auto()) @map("_id") @db.ObjectId
    messageId String
    memberId  String @unique
}

model Guild {
    id                        String @id @default(auto()) @map("_id") @db.ObjectId
    gID                       String @unique
    gName                     String
    prefix                    String @default("?")
    announcementsChannelId    String @default("")
    rolesChannelId            String @default("")
    modC                      String @default("")
    birthdayAnnounceChan      String @default("")
    birthdayLogMessageId      String @default("")
    birthdayMonthLogMessageId String @default("")
    birthdayLogChannelId      String @default("")
    gamingChannelId           String @default("")
    taskLogsChannelId         String @default("")
    verifiedRole              String @default("")
    reactionMessageID         String @default("")
    welcomeC                  String @default("")
    leaveC                    String @default("")
    introC                    String @default("")
    userCount                 Int    @default(0)
    botCount                  Int    @default(0)
    allCount                  Int    @default(0)
    userCountChan             String @default("")
    botCountChan              String @default("")
    allCountChan              String @default("")
    prideChannelId            String @default("")
}

type BirthdayEntry {
    userID   String
    date     String
    nickname String?
    username String
}

model Birthday {
    id        String          @id @default(auto()) @map("_id") @db.ObjectId
    gID       String          @unique
    birthdays BirthdayEntry[]
}

model TaskMessages {
    id        String @id @default(auto()) @map("_id") @db.ObjectId
    messageId String @unique
}

model CustomWelcomeMessages {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId
    memberId      String   @unique
    random        Boolean
    singleMessage String?
    messagesArray String[]
}

type Role {
    id   String
    name String
}

type Menu {
    messageId String
    channelId String
    uniqueId  String
    title     String
    roles     Role[]
}

model SelectRoles {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    guildId String @unique
    menus   Menu[]
}

model Tempo {
    id     String   @id @default(auto()) @map("_id") @db.ObjectId
    userId String   @unique
    roles  String[]
}

model UserRoles {
    userId String   @id @map("_id")
    roles  String[]
}

model LeaderBoards {
    id String @id @map("_id")
}

model Counter {
    id           String          @id @map("_id")
    channel      String
    active       Boolean         @default(false)
    count        Int
    saves        CountingSaves
    roles        CountingRoles[]
    lastUser     String?
    lastCount    Int?
    highestCount Int
    users        CountingUser[]
}

type CountingRoles {
    id   String
    name String
}

type CountingSaves {
    enabled Boolean @default(false)
    amount  Int
}

type CountingUser {
    id    String
    coins Int
}
